const nodemailer = require('nodemailer');

// C·∫•u h√¨nh transporter (s·ª≠ d·ª•ng Gmail l√†m v√≠ d·ª•)
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.EMAIL_USER, // Email c·ªßa b·∫°n
    pass: process.env.EMAIL_PASS, // App password ho·∫∑c password
  },
});

// H√†m g·ª≠i email th√¥ng b√°o duy·ªát c·ª≠a h√†ng
const sendStoreApprovalEmail = async (storeData) => {
  try {
    const mailOptions = {
      from: {
        name: 'H·ªá th·ªëng Qu·∫£n l√Ω C·ª≠a h√†ng',
        address: process.env.EMAIL_USER
      },
      to: storeData.email,
      subject: 'üéâ T√†i kho·∫£n c·ª≠a h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t th√†nh c√¥ng!',
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Th√¥ng b√°o k√≠ch ho·∫°t t√†i kho·∫£n</title>
          <style>
            body {
              font-family: Arial, sans-serif;
              line-height: 1.6;
              margin: 0;
              padding: 20px;
              background-color: #f4f4f4;
            }
            .container {
              max-width: 600px;
              margin: 0 auto;
              background-color: white;
              padding: 30px;
              border-radius: 10px;
              box-shadow: 0 0 10px rgba(0,0,0,0.1);
            }
            .header {
              text-align: center;
              color: #2c3e50;
              border-bottom: 2px solid #3498db;
              padding-bottom: 20px;
              margin-bottom: 30px;
            }
            .success-badge {
              background-color: #27ae60;
              color: white;
              padding: 10px 20px;
              border-radius: 25px;
              display: inline-block;
              margin: 20px 0;
            }
            .store-info {
              background-color: #ecf0f1;
              padding: 20px;
              border-radius: 5px;
              margin: 20px 0;
            }
            .footer {
              text-align: center;
              margin-top: 30px;
              padding-top: 20px;
              border-top: 1px solid #ddd;
              color: #7f8c8d;
            }
            .btn {
              display: inline-block;
              padding: 12px 30px;
              background-color: #3498db;
              color: white;
              text-decoration: none;
              border-radius: 5px;
              margin: 20px 0;
            }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>üéâ Ch√∫c m·ª´ng!</h1>
              <div class="success-badge">
                T√†i kho·∫£n ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t
              </div>
            </div>
            
            <div class="content">
              <p>Xin ch√†o <strong>${storeData.storeName}</strong>,</p>
              
              <p>Ch√∫ng t√¥i vui m·ª´ng th√¥ng b√°o r·∫±ng t√†i kho·∫£n c·ª≠a h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c <strong>duy·ªát v√† k√≠ch ho·∫°t th√†nh c√¥ng</strong>!</p>
              
              <div class="store-info">
                <h3>Th√¥ng tin c·ª≠a h√†ng:</h3>
                <p><strong>T√™n c·ª≠a h√†ng:</strong> ${storeData.storeName}</p>
                <p><strong>Email:</strong> ${storeData.email}</p>
                <p><strong>Tr·∫°ng th√°i:</strong> <span style="color: #27ae60; font-weight: bold;">ƒê√£ k√≠ch ho·∫°t</span></p>
                <p><strong>Ng√†y k√≠ch ho·∫°t:</strong> ${new Date().toLocaleDateString('vi-VN')}</p>
              </div>
              
              <p>B√¢y gi·ªù b·∫°n c√≥ th·ªÉ:</p>
              <ul>
                <li>ƒêƒÉng nh·∫≠p v√†o h·ªá th·ªëng qu·∫£n l√Ω c·ª≠a h√†ng</li>
                <li>Th√™m v√† qu·∫£n l√Ω s·∫£n ph·∫©m</li>
                <li>X·ª≠ l√Ω ƒë∆°n h√†ng t·ª´ kh√°ch h√†ng</li>
                <li>S·ª≠ d·ª•ng d·ªãch v·ª• giao h√†ng GHN</li>
              </ul>
              
              <div style="text-align: center;">
                  ƒêƒÉng nh·∫≠p ngay
                </a>
              </div>
              
              <p>N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua email n√†y ho·∫∑c hotline h·ªó tr·ª£.</p>
              
              <p>Ch√∫c b·∫°n kinh doanh th√†nh c√¥ng!</p>
            </div>
            
            <div class="footer">
              <p>Tr√¢n tr·ªçng,<br>
              <strong>ƒê·ªôi ng≈© h·ªó tr·ª£</strong></p>
              <p style="font-size: 12px; color: #95a5a6;">
                Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi tr·ª±c ti·∫øp.
              </p>
            </div>
          </div>
        </body>
        </html>
      `,
      // Text version cho email client kh√¥ng h·ªó tr·ª£ HTML
      text: `
        Ch√∫c m·ª´ng ${storeData.storeName}!
        
        T√†i kho·∫£n c·ª≠a h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c duy·ªát v√† k√≠ch ho·∫°t th√†nh c√¥ng!
        
        Th√¥ng tin c·ª≠a h√†ng:
        - T√™n c·ª≠a h√†ng: ${storeData.storeName}
        - Email: ${storeData.email}
        - Tr·∫°ng th√°i: ƒê√£ k√≠ch ho·∫°t
        - Ng√†y k√≠ch ho·∫°t: ${new Date().toLocaleDateString('vi-VN')}
        
        B√¢y gi·ªù b·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p v√† b·∫Øt ƒë·∫ßu s·ª≠ d·ª•ng h·ªá th·ªëng.
        
        N·∫øu c√≥ c√¢u h·ªèi, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.
        
        Tr√¢n tr·ªçng,
        ƒê·ªôi ng≈© h·ªó tr·ª£
      `
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('Email sent successfully:', result.messageId);
    return { success: true, messageId: result.messageId };
    
  } catch (error) {
    console.error('Error sending email:', error);
    return { success: false, error: error.message };
  }
};

module.exports = {
  sendStoreApprovalEmail
};